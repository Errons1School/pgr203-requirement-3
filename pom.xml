<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>no.kristiania.webshop</groupId>
    <artifactId>arbeidskrav3-webshop</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <azure.appName>${project.artifactId}-freebatties</azure.appName>
    </properties>


    <build>
        <plugins>

<!--            VVV plugin for GitHub actions report-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifest>
<!--                            VVV this is the config for .jar executable methode-->
                            <mainClass>no.kristiania.webshop.WebShop</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
<!--                                VVV This is needed for making correct fat-jar-->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

<!--            VVV Maven plugin has a plugin command for config! mavnev -> Plugins -> azure-webapp -> azure-webapp:config -->
            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-webapp-maven-plugin</artifactId>
                <version>2.7.0</version>
                <configuration>
                    <schemaVersion>v2</schemaVersion>
<!--                    VVV Gets the same name from maven project-->
                    <resourceGroup>${project.groupId}</resourceGroup>
<!--                    VVV This gets name for upload from config beside JVM version-->
                    <appName>${azure.appName}</appName>
<!--                    VVV F1 is free pricing-->
                    <pricingTier>F1</pricingTier>
                    <region>westeurope</region>
                    <runtime>
                        <os>Linux</os>
                        <javaVersion>Java 17</javaVersion>
                        <webContainer>Java SE</webContainer>
                    </runtime>
                    <deployment>
                        <resources>
                            <resource>
                                <directory>${project.basedir}/target</directory>
                                <includes>
<!--                                    VVV This line is needed for uploading only one file to azure-->
                                    <include>${project.build.finalName}.jar</include>
                                </includes>
                            </resource>
                        </resources>
                    </deployment>
                </configuration>
            </plugin>

        </plugins>
    </build>


    <dependencies>

        <dependency>
            <!-- add an implementation for Jax-RS instead of using Servlet -->
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>3.0.8</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>3.0.8</version>
        </dependency>

        <dependency>
            <!-- add jetty on top of socket -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-webapp</artifactId>
            <version>11.0.12</version>
        </dependency>

        <dependency>
            <!-- add jakarta.json API parsing (and using parson as implementation  -->
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <version>2.1.1</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>jakarta.activation</groupId>-->
<!--            <artifactId>jakarta.activation-api</artifactId>-->
<!--            <version>2.1.0</version>-->
<!--        </dependency>-->

        <dependency>
            <!-- use parson as implementation for Jakarta.json API -->
            <groupId>org.eclipse.parsson</groupId>
            <artifactId>parsson</artifactId>
            <version>1.1.1</version>
        </dependency>




<!--        VVV These are used for testing -->
        <dependency>
            <!-- add logevents as implementation of the logging API-->
            <groupId>org.logevents</groupId>
            <artifactId>logevents</artifactId>
            <version>0.3.3</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <!-- add Junit testing to the project -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- add assertJ for asserting -->
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.23.1</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>